datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}
 
model User {
    id            String  @default(uuid()) @id
    name          String  @unique
    password      String
    threads       Thread[]
    likes         Likes[]
    saved         Saved[]
    comments      Comment[]
}

model Tag {
    id          String  @default(uuid()) @id
    name        String  @unique
    threads     TagsOnThreads[] 
}

model Thread {
    id          String  @default(uuid()) @id
    title       String
    content     String
	
    likes       Likes[]
    saved       Saved[]
    views       Int     @default(0) 
    comments    Comment[]
           
    tags        TagsOnThreads[]

    user        User    @relation(fields: [userID], references: [id])
    userID      String

	  createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Likes {
  user            User             @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userID          String 
  thread           Thread        @relation(fields: [threadID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  threadID         String 
  @@id([threadID, userID])
}

model Saved {
  user              User             @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userID            String 
  thread           Thread         @relation(fields: [threadID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  threadID         String 
  @@id([threadID, userID])
}

model TagsOnThreads {
  thread        Thread     @relation(fields: [threadID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  threadID      String 
  tag           Tag        @relation(fields: [tagID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tagID         String 
  @@id([threadID, tagID])
}

model Comment {
    id          String  @default(uuid()) @id
    content     String
    likes       Int     @default(0) 
    views       Int     @default(0) 

    parent      Thread  @relation(fields: [parentID], references: [id], onDelete: Cascade, onUpdate: Cascade)
    parentID    String    

    user        User    @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userID      String

	createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt    
}